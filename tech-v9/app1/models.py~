from django.db import models
# Create your models here.
from django.conf import settings
from django.core.urlresolvers import reverse
from django.db import models
from django.db.models.signals import pre_save
from django.utils import timezone
from django.contrib.auth.models import User
from django.utils.text import slugify
import uuid
import os
from datetime import datetime, timedelta
from datetime import date
from django.utils.timezone import now
import datetime
import app1.headsectors
from app1.headsectors import  hsectors
def get_file_path1(instance, filename):
    ext = filename.split('.')[-1]
    filename = "%s.%s.%s" % ( datetime.datetime.now(),uuid.uuid4(), ext)
    return os.path.join('blueprints', filename)
def get_file_path2(instance, filename):
    ext = filename.split('.')[-1]
    filename = "%s.%s.%s" % ( datetime.datetime.now(),uuid.uuid4(), ext)
    return os.path.join('cartridges', filename)
def get_file_path3(instance, filename):
    ext = filename.split('.')[-1]
    filename = "%s.%s.%s" % ( datetime.datetime.now(),uuid.uuid4(), ext)
    return os.path.join('spareparts', filename)
def get_file_path4(instance, filename):
    ext = filename.split('.')[-1]
    filename = "%s.%s.%s" % ( datetime.datetime.now(),uuid.uuid4(), ext)
    return os.path.join('passrecovery', filename)
class hw_malfunction(models.Model):
      sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
      user_fullname = models.CharField(max_length=120,verbose_name='اسم المستخدم')
      user_sector = models.CharField(blank=False,editable=True,max_length=120,choices=sectors,verbose_name='رئاسة القطاعات')
      pc_type = models.CharField(max_length=120,verbose_name='نوع الكومبيوتر')
      problem_date = models.DateTimeField(verbose_name='تاريخ المشكله')
      problem_desc = models.TextField(verbose_name='وصف المشكله')
      timestamp = models.DateField(auto_now_add=True, auto_now=False,null=True)
      updated = models.DateTimeField(auto_now_add=True,null=True)
      publisher = models.ForeignKey(User,null=True) 
      status = models.BooleanField(default=True)
      ip = models.CharField(blank=False,null=True,max_length=120)
      closed_by = models.CharField(blank=False, null=True, max_length=120)
      close_date = models.DateTimeField(auto_now_add=True, null=True)

      def __str__(self):
          return '%s %s %s %s %s %s ' %      (self.user_fullname,self.user_sector,self.pc_type,self.problem_date,self.problem_desc,self.timestamp,)
      def get_absolute_url(self):
          return "/app1/%s/" %(self.id)

class nw_malfunction(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        nettype=(('WIRE','WIRE'),('WIRELESS-CARD','WIRLESS-CARD'),('WIRELESS-USB','WIRELESS-USB'))
        user_fullname = models.CharField(max_length=120,verbose_name='اسم المستخدم')
        netwk_type = models.CharField(max_length=120,choices=nettype,verbose_name='نوع الشبكه')
        user_sector = models.CharField(blank=False,max_length=120,choices=sectors,verbose_name='رئاسة القطاعات')
        problem_date = models.DateTimeField(verbose_name='تاريخ المشكله')
        problem_desc = models.TextField(verbose_name='وصف المشكله')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        status = models.BooleanField(default=True)
        publisher = models.ForeignKey(User,null=True)
        ip = models.CharField(blank=False,null=True,max_length=120)
        closed_by = models.CharField(blank=False, null=True, max_length=120)
        close_date = models.DateTimeField(auto_now_add=True, null=True)

        def __str__(self):
          return '%s %s %s %s %s' % (self.user_fullname, self.user_sector, self.netwk_type, self.problem_date, self.problem_desc)


class print_malfunction(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        user_fullname = models.CharField(max_length=120,verbose_name='اسم المستخدم')
        user_sector = models.CharField(blank=False,max_length=120,choices=sectors,verbose_name='رئاسة القطاعات')
        printer_type = models.CharField(max_length=120,verbose_name='نوع الطابعه')
        problem_date = models.DateTimeField(verbose_name='تاريخ المشكله')
        problem_desc = models.TextField(verbose_name='وصف المشكله')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        publisher = models.ForeignKey(User,null=True,blank=False)
        status = models.BooleanField(default=True)
        ip = models.CharField(blank=False,null=True,max_length=120)
        closed_by = models.CharField(blank=False, null=True, max_length=120)
        close_date = models.DateTimeField(auto_now_add=True, null=True)

        def __str__(self):
          return '%s %s %s %s %s' % (self.user_fullname, self.user_sector, self.printer_type, self.problem_date, self.problem_desc)
        def get_absolute_url(self):
          return "/app1/%s/" %(self.id)



class analytics(models.Model):
      sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
      years = (
          ('2018', '2018'),
          ('2019', '2019'),
          ('2020', '2020'),
          ('2021', '2021'),
          ('2022', '2022'),
          ('2023', '2023'),
          ('2024', '2024'),
          ('2025', '2025'),
          ('2026', '2026'),
          ('2027', '2027'),
          ('2028', '2028'),
          ('2029', '2029'),
          ('2030', '2030'),
          ('2031', '2031'),
          ('2032', '2032'),
          ('2033', '2033'),
          ('2034', '2034'),
          ('2035', '2035'),
          ('2036', '2036'),
          ('2037', '2037'),
          ('2038', '2038'),
          ('2039', '2039'),
          ('2040', '2040'),
          ('2041', '2041'),
          ('2042', '2042'),
          ('2043', '2043'),
          ('2044', '2044'),
          ('2045', '2045'),
          ('2046', '2046'),
          ('2047', '2047'),
          ('2048', '2048'),
          ('2049', '2049'),
          ('2050', '2050'),
          ('2051', '2051'),
          ('2052', '2052'),
          ('2053', '2053'),
          ('2054', '2054'),
          ('2055', '2055'),
          ('2056', '2056'),
          ('2057', '2057'),
          ('2058', '2058'),
          ('2059', '2059'),
          ('2060', '2060'),
          ('2061', '2061'),
          ('2062', '2062'),
          ('2063', '2063'),
          ('2064', '2064'),
          ('2065', '2065'),
          ('2066', '2066'),
          ('2067', '2067'),
          ('2068', '2068'),
          ('2069', '2069'),
          ('2070', '2070'),
          ('2071', '2071'),
          ('2072', '2072'),
          ('2073', '2073'),
          ('2074', '2074'),
          ('2075', '2075'),
          ('2076', '2076'),
          ('2077', '2077'),
          ('2078', '2078'),
          ('2079', '2079'),
          ('2080', '2080'),
          ('2081', '2081'),
          ('2082', '2082'),
          ('2083', '2083'),
          ('2084', '2084'),
          ('2085', '2085'),
          ('2086', '2086'),
          ('2087', '2087'),
          ('2088', '2088'),
          ('2089', '2089'),
          ('2090', '2090'),
          ('2091', '2091'),
          ('2092', '2092'),
          ('2093', '2093'),
          ('2094', '2094'),
          ('2095', '2095'),
          ('2096', '2096'),
          ('2097', '2097'),
          ('2098', '2098'),
          ('2099', '2099'),
          ('2100', '2100'),
          ('2101', '2101'),
      )
      select_sector = models.CharField(blank=False,max_length=120,choices=sectors,verbose_name='SectorName')
      select_year = models.CharField(blank=True, null=True,max_length=120,choices=years,verbose_name='SectorName')

      def __str__(self):
          return ( self.select_sector)

class tag:
      typechecked = models.BooleanField()
      sectchecked = models.BooleanField()
      usechecked = models.BooleanField()

class search(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        problem = (('HardWare','HardWare'),('Printers','Printers'),('Network','Network'))
        demand = (('Cartridge','Cartridge'),('Passrecovery','Passrecovery'),('Spareparts','Spareparts'))
        select_sector = models.CharField(blank=True,max_length=120,choices=sectors,verbose_name='SectorName')
        select_problem = models.CharField(blank=True,max_length=120,choices=problem,verbose_name='Problem Type')
        select_user = models.CharField(blank=True,max_length=120,verbose_name='اسم المستخدم')
        select_Demand = models.CharField(blank=True,max_length=120,choices=demand,verbose_name='Demand Type')
        demand_date_from = models.DateTimeField(verbose_name='تاريخ الطلب من ')
        demand_date_to = models.DateTimeField(verbose_name='تاريخ الطلب الى ')

        def __str__(self):
          return '%s %s %s %s %s %s' % (self.select_sector, self. select_problem, self.select_user,self.select_Demand,self.demand_date_from,self.demand_date_to)





class cartridges(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
              )
        user_fullname = models.CharField(max_length=120,verbose_name='اسم المستخدم')
        user_sector = models.CharField(blank=False,max_length=120,choices=sectors,verbose_name='رئاسة القطاعات')
        demand_date = models.DateTimeField(verbose_name='تاريخ الطلب')
        printer_type = models.CharField(max_length=120,verbose_name='نوع الطابعه')
        printer_model = models.CharField(max_length=120,verbose_name='موديل الطابعه')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        publisher = models.ForeignKey(User,null=True)
        status = models.BooleanField(default=True)
        thefile = models.FileField(upload_to = get_file_path2,null=True,blank=True,default="NULL",verbose_name='صورة الطلب المرفق')
        ip = models.CharField(blank=False,null=True,max_length=120)
        closed_by = models.CharField(blank=False, null=True, max_length=120)
        close_date = models.DateTimeField(auto_now_add=True, null=True)

        def __str__(self):
          return '%s %s %s %s %s %s ' % (self.user_fullname,self.user_sector,self.demand_date,self.printer_type,self.printer_model,self.timestamp,)
        def get_absolute_url(self):
          return "/app1/%s/" %(self.id)



class   passrecovery(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        user_fullname = models.CharField(max_length=120,verbose_name='اسم المستخدم')
        user_sector = models.CharField(blank=False,max_length=120,choices=sectors,verbose_name='رئاسة القطاعات')
        demand_date = models.DateTimeField(verbose_name='تاريخ طلب الاسترداد')
        app_name= models.CharField(max_length=120,verbose_name='اسم التطبيق')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        publisher = models.ForeignKey(User,null=True)
        status = models.BooleanField(default=True)
        thefile = models.FileField(upload_to = get_file_path4,null=True,default="NULL",blank=True,verbose_name='صورة الطلب المرفق')
        ip = models.CharField(blank=False,null=True,max_length=120)
        closed_by = models.CharField(blank=False, null=True, max_length=120)
        close_date = models.DateTimeField(auto_now_add=True, null=True)

        def __str__(self):
            return '%s %s %s %s %s %s ' % (self.user_fullname,self.user_sector,self.pc_type,self.problem_date,self.problem_desc,self.timestamp,)
        def get_absolute_url(self):
            return "/app1/%s/" %(self.id)

class spareparts(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        user_fullname = models.CharField(max_length=120, verbose_name='اسم المستخدم')
        user_sector = models.CharField(blank=False, max_length=120, choices=sectors, verbose_name='رئاسة القطاعات')
        demand_date = models.DateTimeField(verbose_name='تاريخ الطلب')
        part_type = models.CharField(max_length=120, verbose_name='نوع القطعه')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        publisher = models.ForeignKey(User, null=True)
        status = models.BooleanField(default=True)
        thefile = models.FileField(upload_to = get_file_path3,null=True, blank=True, verbose_name='صورة الطلب المرفق')
        ip = models.CharField(blank=False,null=True,max_length=120)
        closed_by = models.CharField(blank=False, null=True, max_length=120)
        close_date = models.DateTimeField(auto_now_add=True,null=True)

        def __str__(self):
          return '%s %s %s %s %s %s ' % (
          self.user_fullname, self.user_sector, self.pc_type, self.problem_date, self.problem_desc, self.timestamp,)

        def get_absolute_url(self):
          return "/app1/%s/" % (self.id)





class asset_pc(models.Model):
      sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
      )
      branshes=(('الفواله','الفواله'),('المهندسيين','المهندسيين'),('جاردن سيتى','جاردن سيتى'),('سيتى بنك','سيتى بنك'),('قصر النيل','قصر النيل'),('التوفيقيه','التوفيقيه'),)
      pctype=(('compatible','compatible'),('Brand','Brand'))
      ramtype=(('SDRAM','SDRAM'),('DDRAM','DDRAM'),('DDRAM2','DDRAM2'),('DDRAM3','DDRAM3'),('DDRAM4','DDRAM4'),)
      ramsize=(('128M','128M'),('256M','256M'),('512M','512M'),('756M','756M'),('1G','1G'),('1.128G',''),('1.256G','1.256G'),('1.512G','1.512G'),('1.768G','1.768G'),('2G','2G'),('2.128G','2.128G'),('2.256G','2.256G'),('2.512G','2.512G'),('2.768G','2.768G'),('3G','3G'),('3.128G','3.128G'),('3.256G','3.256G'),('3.512G','3.512G'),('3.768G','3.768G'),('4G','4G'),('4.128G','4.128G'),('4.256G','4.256G'),('4.512G','4.512G'),('4.768G','4.768G'),('5G','5G'),)
      proctype=(('celeron','celeron'),('Pentium','Pentium'),('PentiumD','PentiumD'),('Pentium4','Pentium4'),('DualCore','DualCore'),('Core2Duo','Core2Duo'),('CoreI3','CoreI3'),('CoreI5','CoreI5'),('CoreI7','CoreI7'),('',''),)
      montype=(('CRT','CRT'),('LCD','LCD'),('LED','LED'),)
      user_fullname = models.CharField(max_length=120,verbose_name='اسم المستخدم')
      user_sector = models.ForeignKey(hsectors,blank=True,null=True,verbose_name=
      bransh = models.CharField(blank=False,null=True,max_length=120,choices=branshes,verbose_name='اسم الفرع')
      pc_type = models.CharField(max_length=120,choices=pctype,verbose_name='نوع الجهاز',editable=True)
      pc_model = models.CharField(max_length=120,verbose_name='موديل الجهاز')
      ram_type= models.CharField(max_length=120,choices=ramtype,verbose_name='نوع الذاكره')
      ram_size= models.CharField(max_length=120,choices=ramsize,verbose_name='حجم الذاكره ')
      processor_type= models.CharField(max_length=120,choices=proctype,verbose_name='نوع المعالج')
      harddisk_size= models.CharField(max_length=120,verbose_name='حجم وحدة التخزين')
      monitor_type= models.CharField(max_length=120,choices=montype,verbose_name='نوع الشاشه الجهاز')
      monitor_size= models.CharField(max_length=120,verbose_name='حجم الشاشه')
      notes = models.TextField(verbose_name='ملاحظات')
      timestamp = models.DateTimeField(auto_now_add=True,null=True)
      updated = models.DateTimeField(auto_now_add=True,null=True)
      updater = models.CharField(blank=False, null=True, max_length=120)  
      publisher = models.ForeignKey(User,null=True)
      status = models.BooleanField(default=True)
      ip = models.CharField(blank=False,null=True,max_length=120)
      def __str__(self):
          return '%s %s %s %s %s %s ' % (self.user_fullname,self.user_sector,self.pc_type,self.timestamp,)
      def get_absolute_url(self):
          return "/app1/%s/" %(self.id)


class asset_printer(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        branshes = (
        ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'), ('سيتى بنك', 'سيتى بنك'),
        ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
        user_fullname = models.CharField(max_length=120, verbose_name='اسم المستخدم')
        user_sector = models.CharField(blank=False, max_length=120, choices=sectors, verbose_name='رئاسة القطاعات')
        printtype=(('LaserJet','LaserJet'),('InkJet','InkJet'),('MFP','MFP'))
        conntype=(('PARALLEL','PARALLEL'),('USB','USB'),('NETWORK','NETWORK'),('WIRELESS','WIRELESS'),('USB&NETWORK','USB&NETWORK'),('USB+NETWORK+PARALLEL','USB+NETWORK+PARALLEL'))
        bransh = models.CharField(blank=False,null=True, max_length=120, choices=branshes, verbose_name='اسم الفرع')
        printer_type = models.CharField(max_length=120,choices=printtype, verbose_name='نوع الطابعه')
        conn_type = models.CharField(max_length=120,choices=conntype,default="NULL" ,verbose_name='نوع التوصيل')
        printer_model = models.CharField(max_length=120, verbose_name='موديل الطابعه')
        cartridge_number = models.CharField(max_length=120, verbose_name='رقم عبوة الحبر ')
        notes = models.TextField(verbose_name='ملاحظات')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        updater = models.CharField(blank=False, null=True, max_length=120)
        publisher = models.ForeignKey(User, null=True)
        status = models.BooleanField(default=True)
        ip = models.CharField(blank=False,null=True,max_length=120)
        def __str__(self):
            return '%s %s %s %s %s %s ' % (self.user_fullname, self.user_sector, self.printer_type, self.timestamp,)

        def get_absolute_url(self):
            return "/app1/%s/" % (self.id)

class asset_scanner(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        branshes = (
        ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'), ('سيتى بنك', 'سيتى بنك'),
        ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
        scantype=(('LowSpeedNormal','LowSpeedNormal'),('HighSpeedMultiScan','HighSpeedMultiScan'),)
        user_fullname = models.CharField(max_length=120, verbose_name='اسم المستخدم')
        user_sector = models.CharField(blank=False, max_length=120, choices=sectors, verbose_name='رئاسة القطاعات')
        bransh = models.CharField(blank=False, max_length=120, choices=branshes, verbose_name='اسم الفرع')
        scanner_model = models.CharField(max_length=120, verbose_name='موديل الماسح الضوئى')
        scanner_type = models.CharField(max_length=120,default="Null", choices=scantype,verbose_name='نوع الماسح الضوئى')
        notes = models.TextField(verbose_name='ملاحظات')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        updater = models.CharField(blank=False, null=True, max_length=120)
        publisher = models.ForeignKey(User, null=True)
        status = models.BooleanField(default=True)
        ip = models.CharField(blank=False,null=True,max_length=120)
        def __str__(self):
            return '%s %s %s %s %s %s ' % (self.user_fullname, self.user_sector, self.printer_type, self.timestamp,)

        def get_absolute_url(self):
            return "/app1/%s/" % (self.id)

class asset_copier(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        branshes = (
        ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'), ('سيتى بنك', 'سيتى بنك'),
        ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
        copiertype =(('USB','USB'),('ETHERNET','ETHERNET'),('USB+ETHERNET','USB+ETHERNET'),('NO-DATA-CONNECTION','NO-DATA-CONNECTION'),)
        user_sector = models.CharField(blank=False, max_length=120, choices=sectors, verbose_name='رئاسة القطاعات')
        bransh = models.CharField(blank=True,null=True,max_length=120, choices=branshes, verbose_name='اسم الفرع')
        copier_model = models.CharField(max_length=120, verbose_name='موديل ماكينة التصوير')
        cartridge_number = models.CharField(max_length=120, verbose_name='رقم عبوة الحبر ')
        conn_type = models.CharField(blank=True,null=True,max_length=120, default="NO-DATA-CONNECTION",choices=copiertype, verbose_name='نوع التوصيل الشبكى')
        notes = models.TextField(verbose_name='ملاحظات')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        updater = models.CharField(blank=False, null=True, max_length=120)
        publisher = models.ForeignKey(User, null=True)
        status = models.BooleanField(default=True)
        ip = models.CharField(blank=False,null=True,max_length=120)
        def __str__(self):
            return '%s %s %s %s %s %s ' % (self.user_fullname, self.user_sector, self.printer_type, self.timestamp,)

        def get_absolute_url(self):
            return "/app1/%s/" % (self.id)
#---------------------------------------------------------------------------------
#*********************************************************************************
class asset_server(models.Model):
      branshes = (
            ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'), ('سيتى بنك', 'سيتى بنك'),
            ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
      floores = (
        ('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
        ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'),('الاول', 'الاول'))
      bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes, verbose_name='اسم الفرع')
      floor = models.CharField(blank=True, null=True, max_length=120, choices=floores, verbose_name='رقم الطابق')
      server_vendor = models.CharField(max_length=120, verbose_name='المصنع ')
      server_model = models.CharField(max_length=120, verbose_name='الموديل ')
      ram_size = models.CharField(max_length=120, verbose_name='الذاكره ')
      processor = models.CharField(max_length=120, verbose_name='المعالج ',null=True)
      harddisk_size = models.CharField(max_length=120, verbose_name='حجم التخزين ')
      created = models.DateTimeField(auto_now_add=True,null=True)
      updated = models.DateTimeField(auto_now_add=True,null=True)
      updater = models.CharField(blank=False, null=True, max_length=120)  
      publisher = models.ForeignKey(User, null=True)
      status = models.BooleanField(default=True)
      ip = models.CharField(blank=False, null=True, max_length=120)

      def __str__(self):
        return '%s %s %s %s %s %s %s' % (self.server_model, self.server_vendor, self.bransh, self.floor,self.ram_size,self.harddisk_size,self.processor)

      def get_absolute_url(self):
        return "/app1/%s/" % (self.id)




      #---------------------------------------------------------------------------------
#*********************************************************************************
class asset_switch(models.Model):
        branshes = (
          ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'), ('سيتى بنك', 'سيتى بنك'),
          ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
        floores = (
          ('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
          ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'), ('الاول', 'الاول'))
        bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes, verbose_name='اسم الفرع')
        floor = models.CharField(blank=True, null=True, max_length=120, choices=floores, verbose_name='رقم الطابق')
        switch_vendor = models.CharField(max_length=120, verbose_name='المصنع ')
        switch_model = models.CharField(max_length=120, verbose_name='الموديل ')
        port_numbers = models.CharField(max_length=120, verbose_name='عدد المنافذ ')
        publisher = models.ForeignKey(User, null=True)
        ip = models.CharField(blank=False, null=True, max_length=120)
        created = models.DateTimeField(auto_now_add=True, null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        updater = models.CharField(blank=False, null=True, max_length=120)  

        def __str__(self):
          return '%s %s %s %s ' % (
            self.bransh, self.floor, self.switch_model, self.switch_vendor,)



        def get_absolute_url(self):
          return "/app1/%s/" % (self.id)



#---------------------------------------------------------------------------------
#*********************************************************************************
class asset_accesspoint(models.Model):
          branshes = (
            ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'),
            ('سيتى بنك', 'سيتى بنك'),
            ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
          floores = (
            ('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
            ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'), ('الاول', 'الاول'))
          bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes, verbose_name='اسم الفرع')
          floor = models.CharField(blank=True, null=True, max_length=120, choices=floores, verbose_name='رقم الطابق')
          accesspoint_vendor = models.CharField(max_length=120, verbose_name='المصنع ')
          accesspoint_model = models.CharField(max_length=120, verbose_name='الموديل ')
          publisher = models.ForeignKey(User, null=True)
          ip = models.CharField(blank=False, null=True, max_length=120)
          created = models.DateTimeField(auto_now_add=True, null=True)
          updated = models.DateTimeField(auto_now_add=True,null=True)
          updater = models.CharField(blank=False, null=True, max_length=120)  
          def __str__(self):
            return '%s %s %s %s ' % (self.bransh, self.floor, self.accesspoint_model, self.accesspoint_vendor,)

          def get_absolute_url(self):
            return "/app1/%s/" % (self.id)



#---------------------------------------------------------------------------------
#*********************************************************************************
class asset_stick(models.Model):
        sectors = (
        ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
        ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
        ('قطاع المعلومات', 'قطاع المعلومات'),
        ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
        ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
        ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
        ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
        ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
        ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
        ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
        ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
        ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
        ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
        ('قطاع الامن', 'قطاع الامن'),
        ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        user_fullname = models.CharField(max_length=120,verbose_name='اسم المستخدم',default="NULL")
        user_sector = models.CharField(blank=False,editable=True,max_length=120,choices=sectors,verbose_name='رئاسة القطاعات',default="NULL")
        branshes = (
        ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'),
        ('سيتى بنك', 'سيتى بنك'),
        ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
        floores = (
        ('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
        ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'), ('الاول', 'الاول'))
        bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes, verbose_name='اسم الفرع')
        floor = models.CharField(blank=True, null=True, max_length=120, choices=floores, verbose_name='رقم الطابق')
        stick_vendor = models.CharField(max_length=120, verbose_name='المصنع ')
        stick_model = models.CharField(max_length=120, verbose_name='الموديل ')

        publisher = models.ForeignKey(User, null=True)
        ip = models.CharField(blank=False, null=True, max_length=120)
        created = models.DateTimeField(auto_now_add=True, null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        updater = models.CharField(blank=False, null=True, max_length=120)
        def __str__(self):
            return '%s %s %s %s ' % ( self.bransh, self.floor, self.stick_model, self.stick_vendor,)

        def get_absolute_url(self):
            return "/app1/%s/" % (self.id)





            #---------------------------------------------------------------------------------
#*********************************************************************************
class asset_router(models.Model):
              branshes = (
                ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'),
                ('سيتى بنك', 'سيتى بنك'),
                ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
              floores = (
                ('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
                ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'), ('الاول', 'الاول'))
              bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes,
                                        verbose_name='اسم الفرع')
              floor = models.CharField(blank=True, null=True, max_length=120, choices=floores, verbose_name='رقم الطابق')
              router_vendor = models.CharField(max_length=120, verbose_name='المصنع ')
              router_model = models.CharField(max_length=120, verbose_name='الموديل ')
              publisher = models.ForeignKey(User, null=True)
              ip = models.CharField(blank=False, null=True, max_length=120)
              created = models.DateTimeField(auto_now_add=True, null=True)
              updated = models.DateTimeField(auto_now_add=True,null=True)
              updater = models.CharField(blank=False, null=True, max_length=120)  
              def __str__(self):
                return '%s %s %s %s ' % ( self.bransh, self.floor, self.router_model, self.router_vendor,)
              def get_absolute_url(self):
                return "/app1/%s/" % (self.id)







              #---------------------------------------------------------------------------------
#*********************************************************************************
class asset_repeater(models.Model):
                branshes = (
                  ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'),
                  ('سيتى بنك', 'سيتى بنك'),
                  ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
                floores = (
                  ('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
                  ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'), ('الاول', 'الاول'))
                bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes,
                                          verbose_name='اسم الفرع')
                floor = models.CharField(blank=True, null=True, max_length=120, choices=floores,
                                         verbose_name='رقم الطابق')
                repeater_vendor = models.CharField(max_length=120, verbose_name='المصنع ')
                repeater_model = models.CharField(max_length=120, verbose_name='الموديل ')
                publisher = models.ForeignKey(User, null=True)
                status = models.BooleanField(default=True)
                ip = models.CharField(blank=False, null=True, max_length=120)
                created = models.DateTimeField(auto_now_add=True, null=True)
                updated = models.DateTimeField(auto_now_add=True,null=True)
                updater = models.CharField(blank=False, null=True, max_length=120)  
                def __str__(self):
                  return '%s %s %s %s ' % (self.bransh, self.floor, self.repeater_model, self.repeater_vendor,)


                def get_absolute_url(self):
                  return "/app1/%s/" % (self.id)






#---------------------------------------------------------------------------------
#*********************************************************************************
class asset_rack(models.Model):
                  branshes = (
                    ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'),
                    ('سيتى بنك', 'سيتى بنك'),
                    ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
                  floores = (
                    ('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
                    ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'), ('الاول', 'الاول'))
                  racktype = (
                    ('Wall_Mounted', 'Wall_Mounted'), ('STAND_ALONE', 'STAND_ALONE'), ('STAND_ALONE_SMALL', 'STAND_ALONE_SMALL'),)
                  bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes,verbose_name='اسم الفرع')
                  floor = models.CharField(blank=True, null=True, max_length=120, choices=floores,verbose_name='رقم الطابق')
                  rack_type= models.CharField(blank=True, null=True, max_length=120, choices=racktype,verbose_name='نوع الراك')
                  publisher = models.ForeignKey(User, null=True)
                  status = models.BooleanField(default=True)
                  ip = models.CharField(blank=False, null=True, max_length=120)
                  created = models.DateTimeField(auto_now_add=True, null=True)
                  updated = models.DateTimeField(auto_now_add=True,null=True)
                  updater = models.CharField(blank=False, null=True, max_length=120)  
                  def __str__(self):
                    return '%s %s %s  ' % ( self.bransh, self.floor, self.rack_type,)



                  def get_absolute_url(self):
                    return "/app1/%s/" % (self.id)




#---------------------------------------------------------------------------------
#*********************************************************************************
class asset_device(models.Model):
                    branshes = (
                      ('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'),
                      ('سيتى بنك', 'سيتى بنك'),
                      ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
                    floores = (
                      ('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
                      ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'), ('الاول', 'الاول'))
                    bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes,
                                              verbose_name='اسم الفرع')
                    floor = models.CharField(blank=True, null=True, max_length=120, choices=floores,
                                             verbose_name='رقم الطابق')
                    device_name = models.CharField(max_length=120, verbose_name='اسم الجهاز ')
                    device_desc =  models.TextField(verbose_name='وصف الجهاز')
                    publisher = models.ForeignKey(User, null=True)
                    ip = models.CharField(blank=False, null=True, max_length=120)
                    created = models.DateTimeField(auto_now_add=True, null=True)
                    updated = models.DateTimeField(auto_now_add=True,null=True)
                    updater = models.CharField(blank=False, null=True, max_length=120)  
                    def __str__(self):
                      return '%s %s %s %s ' % (self.bransh, self.floor, self.device_name, self.device_desc,)

                    def get_absolute_url(self):
                      return "/app1/%s/" % (self.id)




#---------------------------------------------------------------------------------
#*********************************************************************************
class asset_blueprint(models.Model):
      branshes = (('الفواله', 'الفواله'), ('المهندسيين', 'المهندسيين'), ('جاردن سيتى', 'جاردن سيتى'),
                 ('سيتى بنك', 'سيتى بنك'),
                 ('قصر النيل', 'قصر النيل'), ('التوفيقيه', 'التوفيقيه'),)
      floores = (('التاسع', 'التاسع'), ('الثامن', 'الثامن'), ('العاشر', 'العاشر'), ('السابع', 'السابع'),
                ('الرابع', 'الرابع'), ('الحادى عشر', 'الحادى عشر'), ('الاول', 'الاول'))
      bransh = models.CharField(blank=True, null=True, max_length=120, choices=branshes,verbose_name='اسم الفرع')
      floor = models.CharField(blank=True, null=True, max_length=120, choices=floores,verbose_name='رقم الطابق')
      name = models.CharField(blank=False, null=True, max_length=120)
      ip = models.CharField(blank=False, null=True, max_length=120)
      publisher = models.ForeignKey(User, null=True)
      image = models.FileField(upload_to = get_file_path1,null=True,blank=True,verbose_name='صورة المخطط')
      imagesrc = models.FileField(null=True,blank=True,verbose_name='ملف المصدر')
      created = models.DateTimeField(auto_now_add=True, null=True)
      updated = models.DateTimeField(auto_now_add=True,null=True)
      updater = models.CharField(blank=False, null=True, max_length=120)
      def __str__(self):
        return '%s %s %s %s ' % (self.bransh, self.floor, self.image, self.imagesrc,)

      def get_absolute_url(self):
        return "/app1/%s/" % (self.id)






        #---------------------------------------------------------------------------------
#*********************************************************************************

class asset_lab(models.Model):
        sectors = (
            ('مكتب السيد رئيس مجلس الإدارة والعضو المنتدب', 'مكتب السيد رئيس مجلس الإدارة والعضو المنتدب'),
            ('مكتب العضو المنتدب للشئون المالية والأدارية', 'مكتب العضو المنتدب للشئون المالية والأدارية'),
            ('قطاع المعلومات', 'قطاع المعلومات'),
            ('قطاعات ادارة الشركة والمتابعة', 'قطاعات ادارة الشركة والمتابعة'),
            ('قطاعات ادارة الاصول والاستثمارات', 'قطاعات ادارة الاصول والاستثمارات'),
            ('قطاعات الشئون المالية والموازنات', 'قطاعات الشئون المالية والموازنات'),
            ('قطاعات الرقابة علي الفنادق و الاستثمار', 'قطاعات الرقابة علي الفنادق و الاستثمار'),
            ('قطاعات الشئون التجارية والاحتياجات', 'قطاعات الشئون التجارية والاحتياجات'),
            ('قطاعات الشئون الادارية', 'قطاعات الشئون الادارية'),
            ('قطاعات التدريب والمعاهد الفندقية', 'قطاعات التدريب والمعاهد الفندقية'),
            ('قطاعات العلاقات العامة والشئون الطبية والخدمات', 'قطاعات العلاقات العامة والشئون الطبية والخدمات'),
            ('قطاعات الشئون الهندسية', 'قطاعات الشئون الهندسية'),
            ('قطاعات الشئون القانونية', 'قطاعات الشئون القانونية'),
            ('قطاع الامن', 'قطاع الامن'),
            ('قطاع الرقابة الداخلية', 'قطاع الرقابة الداخلية'),
        )
        branshes=(('الفواله','الفواله'),('المهندسيين','المهندسيين'),('جاردن سيتى','جاردن سيتى'),('سيتى بنك','سيتى بنك'),('قصر النيل','قصر النيل'),('التوفيقيه','التوفيقيه'),)
        user_fullname = models.CharField(max_length=120,verbose_name='اسم المستخدم')
        user_sector = models.CharField(blank=False,max_length=120,choices=sectors,verbose_name='رئاسة القطاعات')
        bransh = models.CharField(blank=False,null=True,max_length=120,choices=branshes,verbose_name='اسم الفرع')
        lab_model = models.CharField(max_length=120,verbose_name='موديل الجهاز')
        lab_vendor = models.CharField(max_length=120,verbose_name='اسم الشركه المصنعه')
        lab_serial = models.CharField(max_length=120,verbose_name='الرقم التسلسلى للجهاز')
        notes = models.TextField(verbose_name='ملاحظات')
        timestamp = models.DateTimeField(auto_now_add=True,null=True)
        updated = models.DateTimeField(auto_now_add=True,null=True)
        updater = models.CharField(blank=False, null=True, max_length=120)
        publisher = models.ForeignKey(User,null=True)
        status = models.BooleanField(default=True)
        ip = models.CharField(blank=False,null=True,max_length=120)
        def __str__(self):
          return '%s %s %s %s %s %s ' % (self.user_fullname,self.user_sector,self.lab_type,self.timestamp,)
        def get_absolute_url(self):
          return "/app1/%s/" %(self.id)
